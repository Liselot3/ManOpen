//
//  ManOpenURLHandlerCommandTests.m
//  ManOpenTests
//
//  Created by Don McCaughey on 11/9/17.
//

#import <XCTest/XCTest.h>
#import "ManOpenURLHandlerCommand.h"
#import "MockManDocumentController.h"


@interface ManOpenURLHandlerCommandTests : XCTestCase

@property (retain) ManOpenURLHandlerCommand *command;
@property (retain) MockManDocumentController *mockManDocumentController;

@end


@implementation ManOpenURLHandlerCommandTests

#pragma mark - x-man-page: scheme

- (void)test_x_man_page_scheme
{
    _command.directParameter = @"x-man-page://grep";
    
    [_command performDefaultImplementation];
    
    XCTAssertFalse(_mockManDocumentController.openApropos_was_called);
    XCTAssertFalse(_mockManDocumentController.openFile_was_called);
    
    XCTAssertTrue(_mockManDocumentController.openString_was_called);
    XCTAssertEqualObjects(@"grep", _mockManDocumentController.openString_string);
}

- (void)test_x_man_page_scheme_with_multiple_pages
{
    _command.directParameter = @"x-man-page://1/grep/printf/2/open";
    
    [_command performDefaultImplementation];
    
    XCTAssertFalse(_mockManDocumentController.openApropos_was_called);
    XCTAssertFalse(_mockManDocumentController.openFile_was_called);
    
    XCTAssertTrue(_mockManDocumentController.openString_was_called);
    XCTAssertEqualObjects(@"grep(1) printf open(2)",
                          _mockManDocumentController.openString_string);
}

- (void)test_x_man_page_scheme_with_apropos_keyword
{
    _command.directParameter = @"x-man-page://print;type=a";
    
    [_command performDefaultImplementation];
    
    XCTAssertFalse(_mockManDocumentController.openFile_was_called);
    XCTAssertFalse(_mockManDocumentController.openString_was_called);
    
    XCTAssertTrue(_mockManDocumentController.openApropos_was_called);
    XCTAssertEqualObjects(@"print", _mockManDocumentController.openApropos_apropos);
}

#pragma mark - file: scheme

- (void)test_file_scheme
{
    _command.directParameter = @"file:///usr/share/man/man1/basename.1";
    
    [_command performDefaultImplementation];
    
    XCTAssertFalse(_mockManDocumentController.openApropos_was_called);
    XCTAssertFalse(_mockManDocumentController.openString_was_called);

    XCTAssertTrue(_mockManDocumentController.openFile_was_called);
    XCTAssertEqualObjects(@"/usr/share/man/man1/basename.1",
                          _mockManDocumentController.openFile_filename);
    XCTAssertTrue(_mockManDocumentController.openFile_force);
}

- (void)test_file_scheme_with_remote_host
{
    _command.directParameter = @"file://www.example.com/usr/share/man/man6/banner.6";
    
    [_command performDefaultImplementation];
    
    XCTAssertFalse(_mockManDocumentController.openApropos_was_called);
    XCTAssertFalse(_mockManDocumentController.openFile_was_called);
    XCTAssertFalse(_mockManDocumentController.openString_was_called);
}

- (void)test_file_scheme_with_relative_path
{
    _command.directParameter = @"file:usr/share/man/man8/arp.8";
    
    [_command performDefaultImplementation];
    
    XCTAssertFalse(_mockManDocumentController.openApropos_was_called);
    XCTAssertFalse(_mockManDocumentController.openFile_was_called);
    XCTAssertFalse(_mockManDocumentController.openString_was_called);
}

#pragma mark - unsupported scheme

- (void)test_unsupported_scheme
{
    _command.directParameter = @"http://www.example.com/index.html";
    
    [_command performDefaultImplementation];
    
    XCTAssertFalse(_mockManDocumentController.openApropos_was_called);
    XCTAssertFalse(_mockManDocumentController.openFile_was_called);
    XCTAssertFalse(_mockManDocumentController.openString_was_called);
}

#pragma mark -

- (void)setUp
{
    [super setUp];
    _mockManDocumentController = [MockManDocumentController new];
    _command = [ManOpenURLHandlerCommand new];
    _command.manDocumentController = (ManDocumentController *)_mockManDocumentController;
}

- (void)tearDown
{
    [super tearDown];
    [_command release];
    [_mockManDocumentController release];
}

@end
