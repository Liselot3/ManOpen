//
//  ManPageTests.m
//  ManOpenTests
//
//  Created by Don McCaughey on 1/20/18.
//

#import <XCTest/XCTest.h>
#import "ManPage.h"


@interface ManPageTests : XCTestCase
@end


@implementation ManPageTests

#pragma mark - +isSection

- (void)testIsSection
{
    XCTAssertTrue([ManPage isSection:@"1"]);
    XCTAssertTrue([ManPage isSection:@"3pm"]);
    XCTAssertTrue([ManPage isSection:@"n"]);
    XCTAssertTrue([ManPage isSection:@"x"]);
    
    XCTAssertFalse([ManPage isSection:nil]);
    XCTAssertFalse([ManPage isSection:@""]);
    XCTAssertFalse([ManPage isSection:@"a1"]);
    XCTAssertFalse([ManPage isSection:@"foobar"]);
}

#pragma mark - -init

- (void)testInit
{
    ManPage *manPage = [[ManPage new] autorelease];
    
    XCTAssertNil(manPage.section);
    XCTAssertNil(manPage.name);
    XCTAssertEqualObjects(@"", manPage.description);
}

#pragma mark - -initWithSection:andName:

- (void)testInitWithSectionAndName
{
    ManPage *manPage = [[ManPage alloc] initWithSection:@"1"
                                                andName:@"intro"];
    [manPage autorelease];
    
    XCTAssertEqualObjects(@"1", manPage.section);
    XCTAssertEqualObjects(@"intro", manPage.name);
    XCTAssertEqualObjects(@"intro(1)", manPage.description);
}

- (void)testInitWithSectionAndName_with_long_section
{
    ManPage *manPage = [[ManPage alloc] initWithSection:@"3p"
                                                andName:@"open"];
    [manPage autorelease];

    XCTAssertEqualObjects(@"3p", manPage.section);
    XCTAssertEqualObjects(@"open", manPage.name);
    XCTAssertEqualObjects(@"open(3p)", manPage.description);
}

- (void)testInitWithSectionAndName_with_empty_section
{
    ManPage *manPage = [[ManPage alloc] initWithSection:@""
                                                andName:@"grep"];
    [manPage autorelease];

    XCTAssertNil(manPage.section);
    XCTAssertEqualObjects(@"grep", manPage.name);
    XCTAssertEqualObjects(@"grep", manPage.description);
}

- (void)testInitWithSectionAndName_with_invalid_section
{
    ManPage *manPage = [[ManPage alloc] initWithSection:@"foobar"
                                                andName:@"grep"];
    [manPage autorelease];

    XCTAssertNil(manPage.section);
    XCTAssertEqualObjects(@"grep", manPage.name);
    XCTAssertEqualObjects(@"grep", manPage.description);
}

- (void)testInitWithSectionAndName_with_empty_section_and_name
{
    ManPage *manPage = [[ManPage alloc] initWithSection:@""
                                                andName:@""];
    [manPage autorelease];

    XCTAssertNil(manPage.section);
    XCTAssertNil(manPage.name);
    XCTAssertEqualObjects(@"", manPage.description);
}

#pragma mark - -initWithName:

- (void)testInitWithName
{
    ManPage *manPage = [[ManPage alloc] initWithName:@"find"];
    [manPage autorelease];

    XCTAssertNil(manPage.section);
    XCTAssertEqualObjects(@"find", manPage.name);
    XCTAssertEqualObjects(@"find", manPage.description);
}

- (void)testInitWithName_with_empty_name
{
    ManPage *manPage = [[ManPage alloc] initWithName:@""];
    [manPage autorelease];

    XCTAssertNil(manPage.section);
    XCTAssertNil(manPage.name);
    XCTAssertEqualObjects(@"", manPage.description);
}

@end
