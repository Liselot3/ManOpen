//
//  NSDictionary+ManOpenTests.m
//  ManOpenTests
//
//  Created by Don McCaughey on 12/25/17.
//

#import <XCTest/XCTest.h>
#import "NSDictionary+ManOpen.h"


@interface NSDictionary_ManOpenTests : XCTestCase
@end


@implementation NSDictionary_ManOpenTests

#pragma mark - dictionaryWithURLQuery:

- (void)testDictionaryWithURLQuery_for_nil
{
    NSDictionary *dictionary = [NSDictionary dictionaryWithURLQuery:nil];
    XCTAssertNil(dictionary);
}

- (void)testDictionaryWithURLQuery_for_empty_string
{
    NSDictionary *dictionary = [NSDictionary dictionaryWithURLQuery:@""];
    XCTAssertEqualObjects(@{}, dictionary);
}

- (void)testDictionaryWithURLQuery_for_key_only
{
    NSDictionary *dictionary = [NSDictionary dictionaryWithURLQuery:@"foo"];
    XCTAssertEqualObjects(@{ @"foo": @"" }, dictionary);
}

- (void)testDictionaryWithURLQuery_for_key_and_equals_only
{
    NSDictionary *dictionary = [NSDictionary dictionaryWithURLQuery:@"foo="];
    XCTAssertEqualObjects(@{ @"foo": @"" }, dictionary);
}

- (void)testDictionaryWithURLQuery_for_value_only
{
    NSDictionary *dictionary = [NSDictionary dictionaryWithURLQuery:@"=bar"];
    XCTAssertEqualObjects(@{ @"": @"bar" }, dictionary);
}

- (void)testDictionaryWithURLQuery_for_equals_only
{
    NSDictionary *dictionary = [NSDictionary dictionaryWithURLQuery:@"="];
    XCTAssertEqualObjects(@{ @"": @"" }, dictionary);
}

- (void)testDictionaryWithURLQuery_for_one_key
{
    NSDictionary *dictionary = [NSDictionary dictionaryWithURLQuery:@"foo=bar"];
    XCTAssertEqualObjects(@{ @"foo": @"bar" }, dictionary);
}

- (void)testDictionaryWithURLQuery_for_url_encoded_key_and_value
{
    NSDictionary *dictionary = [NSDictionary dictionaryWithURLQuery:@"2%2b2%3D5=odds%20%26%20ends"];
    XCTAssertEqualObjects(@{ @"2+2=5": @"odds & ends" }, dictionary);
}

- (void)testDictionaryWithURLQuery_for_invalid_url_encoded_key_and_value
{
    NSDictionary *dictionary = [NSDictionary dictionaryWithURLQuery:@"%foo=%bar"];
    XCTAssertEqualObjects(@{ @"%foo": @"%bar" }, dictionary);
}

- (void)testDictionaryWithURLQuery_for_two_keys
{
    NSDictionary *dictionary = [NSDictionary dictionaryWithURLQuery:@"foo=bar&color=red"];
    NSDictionary *expected = @{
                               @"foo": @"bar",
                               @"color": @"red",
                               };
    XCTAssertEqualObjects(expected, dictionary);
}

- (void)testDictionaryWithURLQuery_for_duplicate_key
{
    NSDictionary *dictionary = [NSDictionary dictionaryWithURLQuery:@"foo=bar&foo=BAR"];
    XCTAssertEqualObjects(@{ @"foo": @"BAR" }, dictionary);
}

- (void)testDictionaryWithURLQuery_for_two_keys_with_whitespace
{
    NSDictionary *dictionary = [NSDictionary dictionaryWithURLQuery:@"\tfoo =%20bar &\tcolor%20= red\n"];
    NSDictionary *expected = @{ @"foo": @"bar", @"color": @"red" };
    XCTAssertEqualObjects(expected, dictionary);
}

- (void)testDictionaryWithURLQuery_with_internal_whitespace
{
    NSDictionary *dictionary = [NSDictionary dictionaryWithURLQuery:@"status=foo\tbar&color=red%0agreen&cool flavor=mint"];
    NSDictionary *expected = @{ @"status": @"foo\tbar", @"color": @"red\ngreen", @"cool flavor": @"mint" };
    XCTAssertEqualObjects(expected, dictionary);
}

- (void)testDictionaryWithURLQuery_for_manopen_scheme
{
    NSDictionary *dictionary = [NSDictionary dictionaryWithURLQuery:@"background=true&MANPATH=/usr/share/man%3a/usr/local/share/man"];
    NSDictionary *expected = @{ @"background": @"true", @"MANPATH": @"/usr/share/man:/usr/local/share/man" };
    XCTAssertEqualObjects(expected, dictionary);
}

#pragma mark - urlQuery

- (void)testURLQuery_for_empty
{
    NSDictionary *dictionary = @{};
    XCTAssertEqualObjects(@"", dictionary.urlQuery);
}

- (void)testURLQuery_for_one_parameter
{
    NSDictionary *dictionary = @{
                                 @"one": @"1",
                                 };
    XCTAssertEqualObjects(@"?one=1", dictionary.urlQuery);
}

- (void)testURLQuery_for_multiple_parameters
{
    NSDictionary *dictionary = @{
                                 @"one": @"1",
                                 @"two": @"2",
                                 @"three": @"3",
                                 };
    XCTAssertEqualObjects(@"?one=1&three=3&two=2", dictionary.urlQuery);
}

- (void)testURLQuery_for_multiple_parameters_needing_url_encoding
{
    NSDictionary *dictionary = @{
                                 @"one": @"1",
                                 @"two": @"1&1",
                                 @"one&two": @"1 and 2",
                                 };
    XCTAssertEqualObjects(@"?one=1&one%26two=1%20and%202&two=1%261", dictionary.urlQuery);
}

- (void)testURLQuery_for_manopen_scheme_parameters
{
    NSDictionary *dictionary = @{
                                 @"MANPATH": @"/usr/share",
                                 @"background": @"true",
                                 };
    XCTAssertEqualObjects(@"?MANPATH=%2Fusr%2Fshare&background=true", dictionary.urlQuery);
}

@end
