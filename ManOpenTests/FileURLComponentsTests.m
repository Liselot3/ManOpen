//
//  FileURLComponentsTests.m
//  ManOpenTests
//
//  Created by Don McCaughey on 1/14/18.
//

#import <XCTest/XCTest.h>
#import "FileURLComponents.h"


@interface FileURLComponentsTests : XCTestCase
@end


@implementation FileURLComponentsTests

- (void)testInit
{
    FileURLComponents *components = [[FileURLComponents new] autorelease];
    
    XCTAssertFalse(components.isAbsolute);
    XCTAssertFalse(components.isDirectory);
    XCTAssertTrue(components.isLocalhost);
    XCTAssertNil(components.host);
    XCTAssertNil(components.path);
}

#pragma mark - initWithHost:andPath:

- (void)testInitWithHostAndPath
{
    FileURLComponents *components = [[FileURLComponents alloc] initWithHost:nil
                                                                    andPath:@"/usr/bin"];
    [components autorelease];
    
    XCTAssertTrue(components.isAbsolute);
    XCTAssertFalse(components.isDirectory);
    XCTAssertTrue(components.isLocalhost);
    XCTAssertNil(components.host);
    XCTAssertEqualObjects(@"/usr/bin", components.path);
}

- (void)testInitWithHostAndPath_with_empty_host
{
    FileURLComponents *components = [[FileURLComponents alloc] initWithHost:@""
                                                                    andPath:@"/usr/bin"];
    [components autorelease];

    XCTAssertTrue(components.isAbsolute);
    XCTAssertFalse(components.isDirectory);
    XCTAssertTrue(components.isLocalhost);
    XCTAssertNil(components.host);
    XCTAssertEqualObjects(@"/usr/bin", components.path);
}

- (void)testInitWithHostAndPath_with_host
{
    FileURLComponents *components = [[FileURLComponents alloc] initWithHost:@"example.com"
                                                                    andPath:@"/usr/bin"];
    [components autorelease];

    XCTAssertTrue(components.isAbsolute);
    XCTAssertFalse(components.isDirectory);
    XCTAssertFalse(components.isLocalhost);
    XCTAssertEqualObjects(@"example.com", components.host);
    XCTAssertEqualObjects(@"/usr/bin", components.path);
}

- (void)testInitWithHostAndPath_with_localhost
{
    FileURLComponents *components = [[FileURLComponents alloc] initWithHost:@"localhost"
                                                                    andPath:@"/usr/bin"];
    [components autorelease];

    XCTAssertTrue(components.isAbsolute);
    XCTAssertFalse(components.isDirectory);
    XCTAssertTrue(components.isLocalhost);
    XCTAssertEqualObjects(@"localhost", components.host);
    XCTAssertEqualObjects(@"/usr/bin", components.path);
}

- (void)testInitWithHostAndPath_with_LOCALHOST
{
    FileURLComponents *components = [[FileURLComponents alloc] initWithHost:@"LOCALHOST"
                                                                    andPath:@"/usr/bin"];
    [components autorelease];

    XCTAssertTrue(components.isAbsolute);
    XCTAssertFalse(components.isDirectory);
    XCTAssertTrue(components.isLocalhost);
    XCTAssertEqualObjects(@"LOCALHOST", components.host);
    XCTAssertEqualObjects(@"/usr/bin", components.path);
}

- (void)testInitWithHostAndPath_with_relative_path
{
    FileURLComponents *components = [[FileURLComponents alloc] initWithHost:nil
                                                                    andPath:@"share/man/man1"];
    [components autorelease];

    XCTAssertFalse(components.isAbsolute);
    XCTAssertFalse(components.isDirectory);
    XCTAssertTrue(components.isLocalhost);
    XCTAssertNil(components.host);
    XCTAssertEqualObjects(@"share/man/man1", components.path);
}

- (void)testInitWithHostAndPath_with_directory_path
{
    FileURLComponents *components = [[FileURLComponents alloc] initWithHost:nil
                                                                    andPath:@"/usr/local/bin/"];
    [components autorelease];

    XCTAssertTrue(components.isAbsolute);
    XCTAssertTrue(components.isDirectory);
    XCTAssertTrue(components.isLocalhost);
    XCTAssertNil(components.host);
    XCTAssertEqualObjects(@"/usr/local/bin/", components.path);
}

#pragma mark - initWithURL:

- (void)testInitWithURL_with_empty_host
{
    NSURL *url = [NSURL URLWithString:@"file:///usr/share/man/man1"];
    
    FileURLComponents *components = [[FileURLComponents alloc] initWithURL:url];
    [components autorelease];

    XCTAssertTrue(components.isAbsolute);
    XCTAssertFalse(components.isDirectory);
    XCTAssertTrue(components.isLocalhost);
    XCTAssertNil(components.host);
    XCTAssertEqualObjects(@"/usr/share/man/man1", components.path);
}

- (void)testInitWithURL_with_host
{
    NSURL *url = [NSURL URLWithString:@"file://example.com/usr/share/man/man1"];
    
    FileURLComponents *components = [[FileURLComponents alloc] initWithURL:url];
    [components autorelease];

    XCTAssertTrue(components.isAbsolute);
    XCTAssertFalse(components.isDirectory);
    XCTAssertFalse(components.isLocalhost);
    XCTAssertEqualObjects(@"example.com", components.host);
    XCTAssertEqualObjects(@"/usr/share/man/man1", components.path);
}

- (void)testInitWithURL_with_localhost
{
    NSURL *url = [NSURL URLWithString:@"file://localhost/usr/share/man/man1"];
    
    FileURLComponents *components = [[FileURLComponents alloc] initWithURL:url];
    [components autorelease];

    XCTAssertTrue(components.isAbsolute);
    XCTAssertFalse(components.isDirectory);
    XCTAssertTrue(components.isLocalhost);
    XCTAssertEqualObjects(@"localhost", components.host);
    XCTAssertEqualObjects(@"/usr/share/man/man1", components.path);
}

- (void)testInitWithURL_without_host
{
    NSURL *url = [NSURL URLWithString:@"file:/usr/share/man/man1"];
    
    FileURLComponents *components = [[FileURLComponents alloc] initWithURL:url];
    [components autorelease];

    XCTAssertTrue(components.isAbsolute);
    XCTAssertFalse(components.isDirectory);
    XCTAssertTrue(components.isLocalhost);
    XCTAssertNil(components.host);
    XCTAssertEqualObjects(@"/usr/share/man/man1", components.path);
}

- (void)testInitWithURL_without_path
{
    NSURL *url = [NSURL URLWithString:@"file://example.com"];
    
    FileURLComponents *components = [[FileURLComponents alloc] initWithURL:url];
    [components autorelease];

    XCTAssertFalse(components.isAbsolute);
    XCTAssertFalse(components.isDirectory);
    XCTAssertFalse(components.isLocalhost);
    XCTAssertEqualObjects(@"example.com", components.host);
    XCTAssertNil(components.path);
}

@end
