//
//  NSString+ManOpenTests.m
//  ManOpenTests
//
//  Created by Don McCaughey on 2/10/18.
//

#import <XCTest/XCTest.h>
#import "NSString+ManOpen.h"


@interface NSString_ManOpenTests : XCTestCase
@end


@implementation NSString_ManOpenTests

- (void)testManPageWords
{
    NSArray<NSString *> *expected = @[];
    XCTAssertEqualObjects(expected, @"".manPageWords);
    
    expected = @[ @"grep" ];
    XCTAssertEqualObjects(expected, @"grep".manPageWords);
    
    expected = @[ @"printf(3)" ];
    XCTAssertEqualObjects(expected, @"printf(3)".manPageWords);
    
    expected = @[ @"sed(1)" ];
    XCTAssertEqualObjects(expected, @"sed (1)".manPageWords);
    
    expected = @[ @"more" ];
    XCTAssertEqualObjects(expected, @"more,".manPageWords);
    
    expected = @[ @"more", @"less" ];
    XCTAssertEqualObjects(expected, @"more, less".manPageWords);
    
    expected = @[ @"sed(1)", @"awk(1)" ];
    XCTAssertEqualObjects(expected, @"sed (1) awk (1)".manPageWords);

    expected = @[ @"grep", @"printf(3)", @"logname", @"sed(1)", @"more" ];
    XCTAssertEqualObjects(expected, @"grep, printf (3) log- name sed(1) more,".manPageWords);
}

- (void)testSingleQuotedShellWord
{
    XCTAssertEqualObjects(@"''", @"".singleQuotedShellWord);
    XCTAssertEqualObjects(@"''\\'''", @"'".singleQuotedShellWord);
    XCTAssertEqualObjects(@"'/foo/bar'", @"/foo/bar".singleQuotedShellWord);
    XCTAssertEqualObjects(@"'/foo bar/baz'", @"/foo bar/baz".singleQuotedShellWord);
    XCTAssertEqualObjects(@"'/Apple'\\''s Stuff'", @"/Apple's Stuff".singleQuotedShellWord);
    XCTAssertEqualObjects(@"'/foo/'\\''bar'\\'''", @"/foo/'bar'".singleQuotedShellWord);
    XCTAssertEqualObjects(@"''\\''foo'\\''/bar'", @"'foo'/bar".singleQuotedShellWord);
}

- (void)testSingleQuotedShellWordWithSurroundingQuotes
{
    XCTAssertEqualObjects(@"", [@"" singleQuotedShellWordWithSurroundingQuotes:NO]);
    XCTAssertEqualObjects(@"''", [@"" singleQuotedShellWordWithSurroundingQuotes:YES]);
    
    XCTAssertEqualObjects(@"'\\''", [@"'" singleQuotedShellWordWithSurroundingQuotes:NO]);
    XCTAssertEqualObjects(@"''\\'''", [@"'" singleQuotedShellWordWithSurroundingQuotes:YES]);
    
    XCTAssertEqualObjects(@"/foo/bar", [@"/foo/bar" singleQuotedShellWordWithSurroundingQuotes:NO]);
    XCTAssertEqualObjects(@"'/foo/bar'", [@"/foo/bar" singleQuotedShellWordWithSurroundingQuotes:YES]);
    
    XCTAssertEqualObjects(@"/foo bar/baz", [@"/foo bar/baz" singleQuotedShellWordWithSurroundingQuotes:NO]);
    XCTAssertEqualObjects(@"'/foo bar/baz'", [@"/foo bar/baz" singleQuotedShellWordWithSurroundingQuotes:YES]);
    
    XCTAssertEqualObjects(@"/Apple'\\''s Stuff", [@"/Apple's Stuff" singleQuotedShellWordWithSurroundingQuotes:NO]);
    XCTAssertEqualObjects(@"'/Apple'\\''s Stuff'", [@"/Apple's Stuff" singleQuotedShellWordWithSurroundingQuotes:YES]);
    
    XCTAssertEqualObjects(@"/foo/'\\''bar'\\''", [@"/foo/'bar'" singleQuotedShellWordWithSurroundingQuotes:NO]);
    XCTAssertEqualObjects(@"'/foo/'\\''bar'\\'''", [@"/foo/'bar'" singleQuotedShellWordWithSurroundingQuotes:YES]);
    
    XCTAssertEqualObjects(@"'\\''foo'\\''/bar", [@"'foo'/bar" singleQuotedShellWordWithSurroundingQuotes:NO]);
    XCTAssertEqualObjects(@"''\\''foo'\\''/bar'", [@"'foo'/bar" singleQuotedShellWordWithSurroundingQuotes:YES]);
}

- (void)testStringByRemovingSuffix
{
    XCTAssertEqualObjects(@"", [@"" stringByRemovingSuffix:@","]);
    XCTAssertEqualObjects(@"", [@"," stringByRemovingSuffix:@","]);
    XCTAssertEqualObjects(@"one", [@"one," stringByRemovingSuffix:@","]);
    XCTAssertEqualObjects(@"one, two", [@"one, two" stringByRemovingSuffix:@","]);

    XCTAssertEqualObjects(@"", [@"" stringByRemovingSuffix:@";\r\n"]);
    XCTAssertEqualObjects(@"", [@";\r\n" stringByRemovingSuffix:@";\r\n"]);
    XCTAssertEqualObjects(@";\r", [@";\r" stringByRemovingSuffix:@";\r\n"]);
    XCTAssertEqualObjects(@"\r\n", [@"\r\n" stringByRemovingSuffix:@";\r\n"]);
    XCTAssertEqualObjects(@"one", [@"one;\r\n" stringByRemovingSuffix:@";\r\n"]);
    XCTAssertEqualObjects(@"one;\r\ntwo", [@"one;\r\ntwo" stringByRemovingSuffix:@";\r\n"]);
}

- (void)testWordsSeparatedByWhitespaceAndNewlineCharacters
{
    NSArray<NSString *> *expected = @[];
    XCTAssertEqualObjects(expected, @"".wordsSeparatedByWhitespaceAndNewlineCharacters);
    
    expected = @[ @"grep" ];
    XCTAssertEqualObjects(expected, @"grep".wordsSeparatedByWhitespaceAndNewlineCharacters);
    
    expected = @[ @"grep" ];
    XCTAssertEqualObjects(expected, @"\tgrep\n".wordsSeparatedByWhitespaceAndNewlineCharacters);
    
    expected = @[ @"grep(1)" ];
    XCTAssertEqualObjects(expected, @"grep(1)".wordsSeparatedByWhitespaceAndNewlineCharacters);
    
    expected = @[ @"grep", @"find" ];
    XCTAssertEqualObjects(expected, @"grep find".wordsSeparatedByWhitespaceAndNewlineCharacters);
    
    expected = @[ @"grep", @"find", @"open(2)" ];
    XCTAssertEqualObjects(expected, @"grep find open(2)".wordsSeparatedByWhitespaceAndNewlineCharacters);
    
    expected = @[ @"grep(1)", @"find", @"open(2)", @"printf(3)" ];
    XCTAssertEqualObjects(expected, @" grep(1)\r\nfind\t open(2)\n  printf(3)\r\n".wordsSeparatedByWhitespaceAndNewlineCharacters);
}

@end
